{"version":3,"sources":["components/menu.component.js","components/home.component.js","components/customer.component.js","App.js","serviceWorker.js","index.js"],"names":["Menu","props","openNav","setState","width","closeNav","state","style","float","this","id","className","href","onClick","to","target","window","API_URL","fontSize","cursor","color","Component","Home","componentDidMount","axios","get","then","response","status","alert","products","data","Data","catch","error","toString","cust_names","cust_addresses","cust_pgs","hss","get_pdf","e","console","log","loaded","name","address","pg","date","toISOString","items","discount_given","total_amount","total_discount","amount_payable","cgst","sgst","check","preventDefault","post","open","receipt_link","handleChange","value","money","find_sum","invoice_skip","auto_gst_change","auto_gst","add_item","item","length","delete_item","key","currentTarget","parentNode","getAttribute","filter","parseInt","update_item","map","new_bill","Date","errors","quantity","Array","fill","discount","parseFloat","forEach","price","rate","toFixed","Math","round","keyMap","ADD","handlers","product","i","customers","customer","addresses","hs","pgs","data-key","title","description","list","onChange","type","placeholder","required","scheme","mrp","step","min","autoComplete","amount","readOnly","deleteable","show","message","class","role","maxWidth","RECIEPT_MESSAGE","onSubmit","for","selected","dateFormat","defaultChecked","max","checked","Customer","update_rows","columns","datatable","rows","element","clickEvent","handleClick","receipt_pdf","hover","push","label","field","params","backgroundColor","textAlign","entriesOptions","entries","pagesAmount","searchTop","searchBottom","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iYA0CeA,E,kDAnCf,WAAYC,GACX,IAAD,8BACI,cAAMA,IAKVC,QAAQ,WACJ,EAAKC,SAAS,CACVC,MAAM,UARd,EAWAC,SAAS,WACL,EAAKF,SAAS,CACVC,MAAM,QAXV,EAAKE,MAAM,CACPF,MAAM,MAHd,E,qDAmBI,OACI,yBAAKG,MAAO,CAACC,MAAM,SACf,yBAAKD,MAAO,CAACH,MAAMK,KAAKH,MAAMF,OAAQM,GAAG,QAAQC,UAAU,WACrE,uBAAGC,KAAK,IAAID,UAAU,WAAWE,QAASJ,KAAKJ,UAA/C,QACA,yBAAKM,UAAU,mBACb,kBAAC,IAAD,CAASG,GAAG,SAAZ,QACA,kBAAC,IAAD,CAASA,GAAG,aAAZ,YACA,uBAAGC,OAAO,QAAQH,KAAMI,OAAOC,QAAQ,WAAvC,WAGJ,0BAAMV,MAAO,CAACW,SAAS,OAAOC,OAAO,UAAUC,MAAM,SAAUP,QAASJ,KAAKP,SAA7E,e,GAhCmBmB,a,2CC6fJC,E,kDAnfX,WAAYrB,GAAQ,IAAD,yBACf,cAAMA,IAoDVsB,kBAAkB,WAGdC,IAAMC,IAAIT,OAAOC,QAAQ,sBAAuB,EAAKX,OACpDoB,MAAK,SAAAC,GACF,GAAwB,MAApBA,EAASC,OAKT,OADAC,MAAM,yCACC,GAJP,EAAK1B,SAAS,CAAC2B,SAASH,EAASI,KAAKC,UAS7CC,OAAM,SAAAC,GACHL,MAAM,kBAAkBK,EAAMC,eAGlCX,IAAMC,IAAIT,OAAOC,QAAQ,oBACxBS,MAAK,SAAAC,GACmB,KAAnBA,EAASC,OACT,EAAKzB,SAAS,CAACiC,WAAWT,EAASI,KAAKC,OAGxCH,MAAMF,EAASO,MAAMA,MAAMC,WAAW,8BAI3CF,OAAM,SAAAC,GACLL,MAAM,kBAAkBK,EAAMC,eAGhCX,IAAMC,IAAIT,OAAOC,QAAQ,wBACxBS,MAAK,SAAAC,GACmB,KAAnBA,EAASC,OACT,EAAKzB,SAAS,CAACkC,eAAeV,EAASI,KAAKC,OAG5CH,MAAMF,EAASO,MAAMA,MAAMC,WAAW,8BAI3CF,OAAM,SAAAC,GACLL,MAAM,kBAAkBK,EAAMC,eAIhCX,IAAMC,IAAIT,OAAOC,QAAQ,kBACxBS,MAAK,SAAAC,GACmB,KAAnBA,EAASC,OACT,EAAKzB,SAAS,CAACmC,SAASX,EAASI,KAAKC,OAGtCH,MAAMF,EAASO,MAAMA,MAAMC,WAAW,8BAI3CF,OAAM,SAAAC,GACLL,MAAM,kBAAkBK,EAAMC,eAGhCX,IAAMC,IAAIT,OAAOC,QAAQ,iBAAkB,EAAKX,OAC/CoB,MAAK,SAAAC,GACsB,MAApBA,EAASC,OACT,EAAKzB,SAAS,CAACoC,IAAIZ,EAASI,KAAKC,OAGjCH,MAAM,4CAGbI,OAAM,SAAAC,GACHL,MAAM,kBAAkBK,EAAMC,gBA7HnB,EAiInBK,QAAU,SAACC,GACPC,QAAQC,IAAI,EAAKrC,OACjB,EAAKH,SAAS,CAACyC,QAAO,IACtB,IAAIb,EAAK,CAACc,KAAK,EAAKvC,MAAMuC,KAAKC,QAAQ,EAAKxC,MAAMwC,QAAQC,GAAG,EAAKzC,MAAMyC,GAAGC,KAAK,EAAK1C,MAAM0C,KAAKC,cAAcC,MAAM,EAAK5C,MAAM4C,MAAMC,eAAe,EAAK7C,MAAM6C,eAAeC,aAAa,EAAK9C,MAAM8C,aAAaC,eAAe,EAAK/C,MAAM+C,eAAeC,eAAe,EAAKhD,MAAMgD,eAAeC,KAAK,EAAKjD,MAAMiD,KAAKC,KAAK,EAAKlD,MAAMkD,KAAKC,MAAM,EAAKnD,MAAMmD,OAChWhB,EAAEiB,iBACFhB,QAAQC,IAAIZ,GACZP,IAAMmC,KAAK3C,OAAOC,QAAQ,aAAcc,GACnCL,MAAK,SAAAC,GACF,EAAKxB,SAAS,CAACyC,QAAO,IACE,MAApBjB,EAASC,OACLZ,OAAO4C,KAAK5C,OAAOC,QAAUU,EAASI,KAAKC,KAAK6B,eAGpDhC,MAAM,yCACN,EAAK1B,SAAS,CAACyC,QAAO,QAI7BX,OAAM,SAAAC,GAEHL,MAAM,kBAAkBK,EAAMC,YAC9B,EAAKhC,SAAS,CAACyC,QAAO,QAtJf,EA8JnBkB,aAAe,SAACrB,GACR,IAAIV,EAAOU,EAAE1B,OAAOgD,MACD,mBAAhBtB,EAAE1B,OAAO8B,MAA6C,SAAlBJ,EAAE1B,OAAO8B,MAAqC,SAAlBJ,EAAE1B,OAAO8B,MAE5D,KAATd,IAECA,EAAK,GAGb,EAAK5B,SAAL,eACKsC,EAAE1B,OAAO8B,KAAOd,IAClB,WAAQ,IAAIiC,EAAQ,EAAKC,WAAY,EAAK9D,SAAS,CAAEiD,aAAcY,EAAM,GAAIV,eAAgBU,EAAM,GAAIX,eAAgBW,EAAM,GAAIT,KAAKS,EAAM,GAAGR,KAAKQ,EAAM,SAzKlJ,EA4KnBE,aAAa,SAACzB,GACV,EAAKtC,SAAS,CAACsD,OAAO,EAAKnD,MAAMmD,SA7KlB,EA+KnBU,gBAAgB,SAAC1B,GACb,EAAKtC,SAAS,CAACiE,UAAU,EAAK9D,MAAM8D,WAAU,WAAQ,IAAIJ,EAAQ,EAAKC,WAAW,EAAK9D,SAAS,CAAEiD,aAAcY,EAAM,GAAIV,eAAgBU,EAAM,GAAIX,eAAgBW,EAAM,GAAIT,KAAKS,EAAM,GAAGR,KAAKQ,EAAM,SAhLxL,EAmLnBK,SAAW,WACP,IAAIC,EAAO,CACP,GAAM,EAAKhE,MAAM4C,MAAMqB,OAAS,EAChC,YAAe,GACf,GAAK,GACL,OAAS,OACT,IAAO,EACP,SAAY,EACZ,KAAQ,EACR,OAAU,EACV,YAAc,GAElB,IACI,IAAIrB,EAAK,sBAAO,EAAK5C,MAAM4C,OAAlB,CAAyBoB,IAClC,EAAKnE,SAAS,CACV+C,MAAOA,IAGf,MAAOhB,GACHL,MAAM,kBAAkBK,EAAMC,YAC9B,EAAKhC,SAAS,CAACyC,QAAO,MAvMX,EA8MnB4B,YAAc,SAAC/B,GACX,IACI,IAAIgC,EAAMhC,EAAEiC,cAAcC,WAAWA,WAAWC,aAAa,YACzD1B,EAAQ,EAAK5C,MAAM4C,MAAM2B,QAAO,SAAAP,GAChC,OAAOQ,SAASR,EAAK5D,MAAQoE,SAASL,MAE1C,EAAKtE,SAAS,CAAE+C,MAAOA,IAAS,WAAQ,IAAIc,EAAQ,EAAKC,WAAY,EAAK9D,SAAS,CAAEiD,aAAcY,EAAM,GAAIV,eAAgBU,EAAM,GAAIX,eAAgBW,EAAM,GAAGT,KAAKS,EAAM,GAAGR,KAAKQ,EAAM,QAE7L,MAAO9B,GACHL,MAAM,kBAAkBK,EAAMC,YAC9B,EAAKhC,SAAS,CAACyC,QAAO,MAxNX,EAiOnBmC,YAAc,SAACtC,GACX,IACI,IAAIgC,EAAMhC,EAAEiC,cAAcC,WAAWA,WAAWA,WAAWC,aAAa,YACpE/B,EAAOJ,EAAEiC,cAAcE,aAAa,QACpCb,EAAQtB,EAAEiC,cAAcX,MAC5B,GAAc,gBAATlB,GAAmC,OAATA,GAA0B,WAATA,GAE/B,KAAVkB,EAEC,OAKM,EAAKzD,MAAM4C,MAAMqB,QAAU,EAAKjE,MAAM4C,MAAM8B,KAAI,SAAAV,GAK1D,OAJIQ,SAASR,EAAK5D,MAAQoE,SAASL,KAC/BH,EAAKzB,GAAQkB,GAGTO,KALZ,IAOIN,EAAQ,EAAKC,WAEjB,EAAK9D,SAAS,CAAEiD,aAAcY,EAAM,GAAIV,eAAgBU,EAAM,GAAIX,eAAgBW,EAAM,GAAIT,KAAMS,EAAM,GAAGR,KAAMQ,EAAM,KAE3H,MAAO9B,GACHL,MAAM,kBAAkBK,EAAMC,YAC9B,EAAKhC,SAAS,CAACyC,QAAO,MA5PX,EAmQnBqC,SAAS,WACL,EAAK9E,SAAS,CAAE0C,KAAK,QAAQC,QAAS,GAAGC,GAAI,GAAGU,OAAO,EAAMW,UAAU,EAAKlB,MAAO,CAAC,CAAC,GAAM,EAAE,YAAe,GAAG,GAAK,GAAG,OAAS,OAAO,IAAO,EAAE,SAAY,EAAE,KAAQ,EAAE,OAAU,EAAE,YAAc,IAAQF,KAAM,IAAIkC,KAAO/B,eAAgB,EAAEC,aAAc,EAAEC,eAAgB,EAAEC,eAAgB,EAAE6B,OAAQ,GAAG5B,KAAK,EAAEC,KAAK,KApQzS,EAuQnBS,SAAW,SAACmB,EAAUrB,GAClB,IAAIC,EAAQ,IAAIqB,MAAM,GAAGC,KAAK,GAC9B,IACI,IAAIC,EAAWC,WAAW,EAAKlF,MAAM6C,eAAkB,EAAK7C,MAAM6C,eAAkB,GAWpF,GAPA,EAAK7C,MAAM4C,MAAMuC,SAAQ,SAACnB,GACtB,IAAIoB,EAAQF,WAAWlB,EAAKqB,MACxBP,EAAWI,WAAWlB,EAAKc,UAC/BpB,EAAM,GAAKwB,WAAWxB,EAAM,IAAMwB,WAAWE,GAASF,WAAWJ,MAErEpB,EAAM,GAAKuB,EAER,EAAKjF,MAAM8D,SAEV,IAAIZ,EAA2B,GAAnBQ,EAAM,GAAGuB,GAAY,IAC7BhC,EAA2B,GAAnBS,EAAM,GAAGuB,GAAY,SAI7B/B,EAAqB,EAAhB,EAAKlD,MAAMkD,KAChBD,EAAqB,EAAhB,EAAKjD,MAAMiD,KAaxB,OATAA,EAAKiC,WAAWjC,EAAKqC,QAAQ,IAC7BpC,EAAKgC,WAAWhC,EAAKoC,QAAQ,IAC7BlD,QAAQC,IAAIqB,EAAM,GAAG,IAAIuB,EAAS,IAAIhC,EAAK,IAAIC,GAC/Cd,QAAQC,IAAIqB,EAAM,GAAGuB,EAAShC,GAC9BS,EAAM,GAAK6B,KAAKC,MAAM9B,EAAM,GAAKuB,EAAShC,EAAKC,GAC/Cd,QAAQC,IAAIqB,EAAM,IAClBA,EAAM,GAAG6B,KAAKC,MAAM9B,EAAM,IAC1BA,EAAM,GAAGT,EACTS,EAAM,GAAGR,EACFQ,EAEX,MAAO9B,GACHL,MAAM,kBAAkBK,EAAMC,YAC9B,EAAKhC,SAAS,CAACyC,QAAO,MA5S1B,EAAKtC,OAAL,GACIuC,KAAK,QACLC,QAAS,GACTC,GAAI,GACJU,OAAO,EACPW,UAAU,EACVlB,MAAO,CACH,CACI,GAAM,EACN,YAAe,GACf,GAAK,GACL,OAAS,OACT,IAAO,EACP,SAAY,EACZ,KAAQ,EACR,OAAU,EACV,YAAc,IAGtBF,KAAM,IAAIkC,KACV/B,eAAgB,EAChBC,aAAc,EACdC,eAAgB,EAChBC,eAAgB,EAChB6B,OAAQ,GACRrD,SAAU,GACVS,IAAK,IA1BT,mBA2BO,IA3BP,2BA4Be,IA5Bf,+BA6BmB,IA7BnB,yBA8Ba,IA9Bb,0BA+Bc,IA/Bd,wBAgCY,GAhCZ,qBAiCU,GAjCV,qBAkCU,GAlCV,GAsCA,IAAIyB,EAAQ,EAAKC,WAxCF,OAyCf,EAAK9D,SAAS,CAAEiD,aAAcY,EAAM,GAAIV,eAAgBU,EAAM,GAAIX,eAAgBW,EAAM,GAAGT,KAAMS,EAAM,GAAGR,KAAKQ,EAAM,KAErH,EAAK+B,OAAS,CACVC,IAAK,WAGP,EAAKC,SAAW,CACdD,IAAK,SAACvD,GACJ,EAAK4B,aAjDI,E,qDAsTT,IAAD,OASCvC,EAAWrB,KAAKH,MAAMwB,SAASyC,OAAU9D,KAAKH,MAAMwB,SAASkD,KAAI,SAAAkB,GACnE,OAAQ,4BAAQzB,IAAKyB,EAAQxF,IAAKwF,EAAQrD,SACvC,IACHsD,EAAE,EACAC,EAAY3F,KAAKH,MAAM8B,WAAWmC,OAAU9D,KAAKH,MAAM8B,WAAW4C,KAAI,SAAAqB,GAExE,OADAF,IACQ,4BAAQ1B,IAAK0B,GAAIE,EAASxD,SAC/B,IACPsD,EAAE,EACF,IAAMG,EAAY7F,KAAKH,MAAM+B,eAAekC,OAAU9D,KAAKH,MAAM+B,eAAe2C,KAAI,SAAAqB,GAChF,OAAQ,4BAAQ5B,IAAK0B,GAAIE,EAASvD,YAC/B,IACDP,EAAM9B,KAAKH,MAAMiC,IAAIgC,OAAU9D,KAAKH,MAAMiC,IAAIyC,KAAI,SAAAuB,GACpD,OAAQ,4BAAQ9B,IAAK8B,EAAG7F,IAAK6F,EAAG1D,SAC7B,IACPsD,EAAE,EACF,IAAMK,EAAM/F,KAAKH,MAAMgC,SAASiC,OAAU9D,KAAKH,MAAMgC,SAAS0C,KAAI,SAAAqB,GAC9D,OAAQ,4BAAQ5B,IAAK0B,GAAIE,EAAStD,OAC/B,IAEDG,EAAQzC,KAAKH,MAAM4C,MAAMqB,OAAU9D,KAAKH,MAAM4C,MAAM8B,KAAI,SAAAV,GAC1D,OACI,yBAAKmC,WAAUnC,EAAK5D,GAAIC,UAAU,OAC9B,yBAAKA,UAAU,UACf,2BAAOJ,MAAO,CAAEa,MAAO,UAAW,2CAC9B,yBAAKb,MAAO,CAAEH,MAAO,SAAU,2BAAOsG,MAAOpC,EAAKqC,YAAaC,KAAK,WAAWC,SAAU,EAAK9B,YAAa+B,KAAK,OAAO/C,MAAOO,EAAKqC,YAAahG,UAAU,oBAAoBkC,KAAK,cAAckE,YAAY,qBAAqBC,UAAQ,MAG9O,yBAAKrG,UAAU,UACf,2BAAOJ,MAAO,CAAEa,MAAO,UAAW,uCAC9B,yBAAKb,MAAO,CAAEH,MAAO,SAAU,2BAAOsG,MAAOpC,EAAKiC,GAAIK,KAAK,MAAMC,SAAU,EAAK9B,YAAa+B,KAAK,OAAO/C,MAAOO,EAAKiC,GAAI5F,UAAU,oBAAoBkC,KAAK,KAAKkE,YAAY,cAGjL,yBAAKpG,UAAU,UACf,2BAAOJ,MAAO,CAAEa,MAAO,UAAW,sCAC9B,yBAAKb,MAAO,CAAEH,MAAO,SAAU,2BAAOsG,MAAOpC,EAAK2C,OAAQJ,SAAU,EAAK9B,YAAa+B,KAAK,OAAO/C,MAAOO,EAAK2C,OAAQtG,UAAU,oBAAoBkC,KAAK,SAASkE,YAAY,aAGlL,yBAAKpG,UAAU,UACf,2BAAOJ,MAAO,CAAEa,MAAO,UAAW,mCAC9B,yBAAKb,MAAO,CAAEH,MAAO,SAAU,2BAAOsG,MAAOpC,EAAK4C,IAAKC,KAAK,MAAMN,SAAU,EAAK9B,YAAa+B,KAAK,SAAS/C,MAAOO,EAAK4C,IAAKvG,UAAU,oBAAoBkC,KAAK,MAAMuE,IAAI,IAAIL,YAAY,MAAMC,UAAQ,MAG5M,yBAAKrG,UAAU,UACf,2BAAOJ,MAAO,CAAEa,MAAO,UAAW,wCAC9B,yBAAKb,MAAO,CAAEH,MAAO,SAAU,2BAAOsG,MAAOpC,EAAKc,SAAUyB,SAAU,EAAK9B,YAAa+B,KAAK,SAAS/C,MAAOO,EAAKc,SAAUzE,UAAU,oBAAoBkC,KAAK,WAAWuE,IAAI,IAAIL,YAAY,eAElM,yBAAKpG,UAAU,UACf,2BAAOJ,MAAO,CAAEa,MAAO,UAAW,oCAC9B,yBAAKb,MAAO,CAAEH,MAAO,SAAU,2BAAOsG,MAAOpC,EAAKqB,KAAMwB,KAAK,MAAME,aAAa,MAAMR,SAAU,EAAK9B,YAAa+B,KAAK,SAAS/C,MAAOO,EAAKqB,KAAMhF,UAAU,oBAAqByG,IAAI,IAAIvE,KAAK,OAAOkE,YAAY,OAAOC,UAAQ,MAEpO,yBAAKrG,UAAU,UACf,2BAAOJ,MAAO,CAAEa,MAAO,UAAW,sCAC9B,yBAAKb,MAAO,CAAEH,MAAO,SAAU,2BAAOsG,MAAOpC,EAAKgD,OAAQD,aAAa,MAAMR,SAAU,EAAK9B,YAAa+B,KAAK,SAASK,KAAK,IAAIpD,OAAQO,EAAKqB,KAAKrB,EAAKc,UAAUQ,QAAQ,GAAI2B,SAAS,OAAO5G,UAAU,qBAAqByG,IAAI,IAAIvE,KAAK,SAASkE,YAAY,SAASC,UAAQ,MAGnR,yBAAKrG,UAAU,8BAA8BJ,MAAO,CAAEH,MAAO,QACxDkE,EAAKkD,WAAc,0BAAM3G,QAAS,EAAK2D,aAAc,uBAAG7D,UAAU,gCAA6C,0BAAME,QAAS,EAAKwD,SAAU3D,GAAG,YAAY,uBAAGC,UAAU,oCAInL,GAEP,OACI,kBAAC,UAAD,CAASoF,OAAQtF,KAAKsF,OAAQE,SAAUxF,KAAKwF,UAC7C,yBAAKtF,UAAU,aACZ,kBAAC,IAAD,CAAQ8G,KAAMhH,KAAKH,MAAMsC,OAAQ8E,QAAS,yBAAKC,MAAM,iBAAiBC,KAAK,UACvE,0BAAMD,MAAM,WAAZ,gBAEH,yBAAKhH,UAAU,uCACX,kBAAC,EAAD,MACA,yBAAKJ,MAAO,CAAEsH,SAAU,UAAYlH,UAAU,mBAE1C,yBAAKA,UAAU,eACX,4BAAKK,OAAO8G,kBAEhB,yBAAKnH,UAAU,uCACX,0BAAMoH,SAAUtH,KAAK+B,QAAS9B,GAAG,aAAa2G,aAAa,OACvD,2BAAO9G,MAAO,CAAEa,MAAO,SAAWT,UAAU,aAAaqH,IAAI,QAAO,0CAEpE,yBAAKrH,UAAU,0BACX,2BAAOkG,SAAUpG,KAAKqD,aAAcgD,KAAK,OAAOF,KAAK,YAAY7C,MAAOtD,KAAKH,MAAMuC,KAAMlC,UAAU,wBAAwBD,GAAG,OAAOmC,KAAK,OAAOkE,YAAY,kBAAkBC,UAAQ,KAG3L,2BAAOzG,MAAO,CAAEa,MAAO,SAAWT,UAAU,aAAaqH,IAAI,WAAU,8CAEvE,yBAAKrH,UAAU,0BAEX,2BAAOkG,SAAUpG,KAAKqD,aAAcgD,KAAK,WAAWF,KAAK,YAAY7C,MAAOtD,KAAKH,MAAMwC,QAASnC,UAAU,eAAeD,GAAG,UAAUqG,YAAY,gBAAgBlE,KAAK,aAG3K,2BAAOtC,MAAO,CAAEa,MAAO,SAAWT,UAAU,aAAaqH,IAAI,MAAK,2CAElE,yBAAKrH,UAAU,0BACX,2BAAOkG,SAAUpG,KAAKqD,aAAc8C,KAAK,MAAM7C,MAAOtD,KAAKH,MAAMyC,GAAIrC,GAAG,KAAKqG,YAAY,gBAAgBlE,KAAK,KAAKlC,UAAU,kBAGjI,2BAAOJ,MAAO,CAAEa,MAAO,SAAWT,UAAU,aAAaqH,IAAI,QAAO,0CACpE,yBAAKrH,UAAU,0BACX,kBAAC,IAAD,CAAYsH,SAAUxH,KAAKH,MAAM0C,KAAMrC,UAAU,eAAeuH,WAAW,eAAerB,SAAU,SAAA7D,GAAI,OAAI,EAAK7C,SAAS,CAAC,KAAO6C,QAEtI,yBAAKrC,UAAU,qCACX,2BAAOkG,SAAUpG,KAAK0D,gBAAiBzD,GAAG,WAAWoG,KAAK,WAAWqB,eAAgB1H,KAAKH,MAAM8D,WAAW,2BAAO7D,MAAO,CAACa,MAAM,UAArB,4BAE/G,yBAAKV,GAAG,cACHwC,EACL,+BAIA,yBAAKvC,UAAU,+CACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBAAmB,sCAEvC,2BAAOmG,KAAK,SAASK,KAAK,MAAMN,SAAUpG,KAAKqD,aAAcjB,KAAK,OAAOkB,MAAOtD,KAAKH,MAAMiD,KAAM5C,UAAU,eAAeyG,IAAI,OAGlI,yBAAKzG,UAAU,+CACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBAAmB,sCAEvC,2BAAOwG,KAAK,MAAML,KAAK,SAASD,SAAUpG,KAAKqD,aAAcjB,KAAK,OAAOkB,MAAOtD,KAAKH,MAAMkD,KAAM7C,UAAU,eAAeyG,IAAI,OAGlI,yBAAKzG,UAAU,gDACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBAAmB,uBAAGA,UAAU,gBAAhD,YAEJ,2BAAOwG,KAAK,MAAML,KAAK,SAASnG,UAAU,eAAeoD,MAAOtD,KAAKH,MAAMgD,eAAgB8D,IAAI,IAAIG,UAAQ,EAAC7G,GAAG,YAGnH,yBAAKC,UAAU,gDACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBAAmB,uBAAGA,UAAU,gBAAhD,WAEJ,2BAAOmG,KAAK,SAASD,SAAUpG,KAAKqD,aAAcjB,KAAK,iBAAiBkB,MAAOtD,KAAKH,MAAM6C,eAAgBxC,UAAU,eAAeyG,IAAI,IAAIgB,IAAK3H,KAAKH,MAAM8C,gBAE/J,yBAAKzC,UAAU,qCACX,2BAAOkG,SAAUpG,KAAKyD,aAAcxD,GAAG,QAAQoG,KAAK,WAAWuB,QAAS5H,KAAKH,MAAMmD,QAAQ,2BAAOlD,MAAO,CAACa,MAAM,UAArB,YAG/F,yBAAKT,UAAU,cACX,2BAAOmG,KAAK,SAAS/C,MAAM,SAASpD,UAAU,sBAElD,yBAAKA,UAAU,cACX,4BAAQmG,KAAK,SAASjG,QAASJ,KAAKwE,SAAUtE,UAAU,iBAAxD,cAIR,8BAAUD,GAAG,YACRoB,GAEL,8BAAUpB,GAAG,OACR6B,GAEL,8BAAU7B,GAAG,aACR0F,GAEL,8BAAU1F,GAAG,aACR4F,GAEL,8BAAU5F,GAAG,OACR8F,a,GAlednF,a,SCmFJiH,E,kDA3Fb,WAAYrI,GAAQ,IAAD,8BACjB,cAAMA,IAqCRsI,YAAc,SAAC5G,GACb,IACE,IAAI6G,EAAU,EAAKlI,MAAMmI,UAAUD,QAC/BE,EAAO,EAAKpI,MAAMmI,UAAUC,KAChC/G,EAAS8D,SAAQ,SAAAkD,GACfjG,QAAQC,IAAIgG,GACZA,EAAQC,WAAW,kBAAM,EAAKC,YAAYF,EAAQG,cAClDH,EAAQI,MAAM,kBAAI,WAAKrG,QAAQC,IAAI,WACnC+F,EAAKM,KAAKL,MAEZ,IAAIF,EAAY,CAAED,QAASA,EAASE,KAAMA,GAC1C,EAAKvI,SAAS,CAAEsI,UAAWA,IAE7B,MAAOvG,GACLL,MAAM,kBAAkBK,EAAMC,cApDf,EA2DnBZ,kBAAoB,WAClBC,IAAMC,IAAIT,OAAOC,QAAQ,wBACtBS,MAAK,SAAAC,GACmB,KAAnBA,EAASC,OAET,EAAK2G,YAAY5G,EAASI,KAAKC,MAG/BH,MAAMF,EAASO,MAAMA,MAAMC,WAAW,8BAI3CF,OAAM,SAAAC,GACLL,MAAM,kBAAkBK,EAAMC,gBAtElC,EAAK7B,MAAQ,CACXmI,UAAW,CACTD,QAAS,CACP,CACES,MAAO,OACPC,MAAO,OACP9I,MAAO,KAET,CACE6I,MAAO,UACPC,MAAO,UACP9I,MAAO,KAET,CACE6I,MAAO,aACPC,MAAO,KACP9I,MAAO,KAET,CACE6I,MAAO,cACPC,MAAO,cACP9I,MAAO,MAGXsI,KAAM,KA1BO,E,wDAgCPS,GAERnI,OAAO4C,KAAK5C,OAAOC,QAAQkI,EAAO,Y,+BA6CpC,OACE,6BACE,kBAAC,EAAD,MACA,yBAAK5I,MAAO,CAAE6I,gBAAiB,QAASlI,SAAU,OAAQE,MAAO,UAC/D,kBAAC,IAAD,CAAgBT,UAAU,mBAAmBJ,MAAO,CAAEY,OAAQ,UAAWkI,UAAW,OAAQD,gBAAiB,QAASlI,SAAU,OAAQE,MAAO,SAAW2H,OAAK,EAACO,eAAgB,CAAC,GAAI,GAAI,IAAKC,QAAS,GAAIC,YAAa,EAAGzH,KAAMtB,KAAKH,MAAMmI,UAAWgB,WAAS,EAACC,cAAc,U,GApFlQrI,a,gBCsBRsI,MAhBf,WACE,OAEE,kBAAC,IAAD,KACA,yBAAKhJ,UAAU,OACd,kBAAC,IAAD,CAAOiJ,OAAK,EAACC,KAAK,QAAQC,UAAW9J,IACrC,kBAAC,IAAD,CAAO4J,OAAK,EAACC,KAAK,YAAYC,UAAWxB,IACzC,kBAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,QAAQC,UAAWxI,IACrC,kBAAC,IAAD,CAAOsI,OAAK,EAACC,KAAK,IAAIC,UAAWxI,OCPlByI,QACW,cAA7B/I,OAAOgJ,SAASC,UAEe,UAA7BjJ,OAAOgJ,SAASC,UAEhBjJ,OAAOgJ,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhJ,MAAK,SAAAiJ,GACJA,EAAaC,gBAEd3I,OAAM,SAAAC,GACLQ,QAAQR,MAAMA,EAAMwF,c","file":"static/js/main.d4910464.chunk.js","sourcesContent":["import React,{Component} from 'react'\nimport '../css/menu.css';\nimport { NavLink } from 'react-router-dom';\n\n\nclass Menu extends Component\n{\nconstructor(props)\n{\n    super(props);\n    this.state={\n        width:\"0%\"\n    }\n}\nopenNav=()=>{\n    this.setState({\n        width:\"100%\"\n    })\n}\ncloseNav=()=>{\n    this.setState({\n        width:\"0%\"\n    })\n}\n\nrender()\n{\n    return(\n        <div style={{float:\"left\"}}>\n            <div style={{width:this.state.width}} id=\"myNav\" className=\"overlay\">\n  <a href=\"#\" className=\"closebtn\" onClick={this.closeNav}>&times;</a>\n  <div className=\"overlay-content\">\n    <NavLink to=\"/home\">Home</NavLink>\n    <NavLink to=\"/customer\">Receipts</NavLink>\n    <a target=\"blank\" href={window.API_URL+'/admin/'}>Admin</a>\n  </div>\n</div>\n<span style={{fontSize:\"40px\",cursor:\"pointer\",color:\"white\"}} onClick={this.openNav}>&#9776;</span>\n </div>\n    )\n}\n}\nexport default(Menu)","import React, { Component} from 'react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport '../css/home.css';\nimport Menu from './menu.component'\nimport axios from 'axios';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Loader from 'react-loader-advanced';\nimport { HotKeys } from \"react-hotkeys\";\n\n\n\n\n\nclass Home extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            name:\"Shri \",\n            address: \"\",\n            pg: \"\",\n            check: false,\n            auto_gst: true,\n            items: [\n                {\n                    \"id\": 1,\n                    \"description\": \"\",\n                    \"hs\":\"\",\n                    \"scheme\":'None',\n                    \"mrp\": 0,\n                    \"quantity\": 0,\n                    \"rate\": 0,\n                    \"amount\": 0,\n                    \"deleteable\": false\n                }\n            ],\n            date: new Date(),\n            discount_given: 0,\n            total_amount: 0,\n            total_discount: 0,\n            amount_payable: 0,\n            errors: [],\n            products: [],\n            hss: [],\n            pg:[],\n            cust_names:[],\n            cust_addresses:[],\n            cust_pgs:[],\n            addresses:[],\n            loaded: false,\n            cgst: 0,\n            sgst: 0\n        }\n\n     \n        let money = this.find_sum()\n        this.setState({ total_amount: money[0], amount_payable: money[2], total_discount: money[1],cgst: money[3],sgst:money[4] })\n\n        this.keyMap = {\n            ADD: \"shift+a\"\n          };\n      \n          this.handlers = {\n            ADD: (e) => {\n              this.add_item();\n            }\n          };\n    }\n    componentDidMount=()=>{\n\n\n        axios.get(window.API_URL+'/receipts/products/', this.state)\n        .then(response => {\n            if (response.status === 200) {\n                this.setState({products:response.data.Data})\n            }\n            else {\n                alert(\"erro occurred: Unknown error occurred\")\n                return([])\n\n            }\n\n        })\n        .catch(error => {\n            alert(\"error occurred \"+error.toString())\n        });\n\n        axios.get(window.API_URL+'/receipts/names/')\n        .then(response => {\n          if (response.status == 200) {\n              this.setState({cust_names:response.data.Data});\n            }\n            else {\n              alert(response.error.error.toString()+\" Unknown Error Occurred\")\n            }\n          }\n        )\n        .catch(error => {\n          alert(\"error occurred \"+error.toString())\n        });\n\n        axios.get(window.API_URL+'/receipts/addresses/')\n        .then(response => {\n          if (response.status == 200) {\n              this.setState({cust_addresses:response.data.Data});\n            }\n            else {\n              alert(response.error.error.toString()+\" Unknown Error Occurred\")\n            }\n          }\n        )\n        .catch(error => {\n          alert(\"error occurred \"+error.toString())\n        });\n\n\n        axios.get(window.API_URL+'/receipts/pgs/')\n        .then(response => {\n          if (response.status == 200) {\n              this.setState({cust_pgs:response.data.Data});\n            }\n            else {\n              alert(response.error.error.toString()+\" Unknown Error Occurred\")\n            }\n          }\n        )\n        .catch(error => {\n          alert(\"error occurred \"+error.toString())\n        });\n\n        axios.get(window.API_URL+'/receipts/hss/', this.state)\n        .then(response => {\n            if (response.status === 200) {\n                this.setState({hss:response.data.Data})\n            }\n            else {\n                alert(\"erro occurred: Unknown error occurred\")\n            }\n        })\n        .catch(error => {\n            alert(\"error occurred \"+error.toString())\n        });\n    }\n\n    get_pdf = (e) => {\n        console.log(this.state)\n        this.setState({loaded:true})\n        var data={name:this.state.name,address:this.state.address,pg:this.state.pg,date:this.state.date.toISOString(),items:this.state.items,discount_given:this.state.discount_given,total_amount:this.state.total_amount,total_discount:this.state.total_discount,amount_payable:this.state.amount_payable,cgst:this.state.cgst,sgst:this.state.sgst,check:this.state.check}\n        e.preventDefault();\n        console.log(data)\n        axios.post(window.API_URL+'/receipts/', data)\n            .then(response => {\n                this.setState({loaded:false})\n                if (response.status === 200) {\n                        window.open(window.API_URL + response.data.Data.receipt_link);\n                }\n                else {\n                    alert(\"erro occurred: Unknown error occurred\")\n                    this.setState({loaded:false})\n\n                }\n            })\n            .catch(error => {\n\n                alert(\"error occurred \"+error.toString())\n                this.setState({loaded:false})\n\n            });\n    }\n\n\n\n\n    handleChange = (e) => {\n            var data = e.target.value;\n            if(e.target.name==='discount_given' || e.target.name === 'cgst' || e.target.name === 'sgst')\n            {\n                if(data === '')\n                {\n                    data=0\n                }\n            }\n            this.setState({\n                [e.target.name]: data\n            }, () => { let money = this.find_sum(); this.setState({ total_amount: money[0], amount_payable: money[2], total_discount: money[1] ,cgst:money[3],sgst:money[4]}) })\n    }\n\n    invoice_skip=(e)=>{\n        this.setState({check:!this.state.check})\n    }\n    auto_gst_change=(e)=>{\n        this.setState({auto_gst:!this.state.auto_gst},() => { let money = this.find_sum();this.setState({ total_amount: money[0], amount_payable: money[2], total_discount: money[1] ,cgst:money[3],sgst:money[4]}) })\n    }\n\n    add_item = () => {\n        let item = {\n            \"id\": this.state.items.length + 1,\n            \"description\": \"\",\n            \"hs\":\"\",\n            \"scheme\":\"None\",\n            \"mrp\": 0,\n            \"quantity\": 0,\n            \"rate\": 0,\n            \"amount\": 0,\n            \"deleteable\": true\n        }\n        try {\n            let items = [...this.state.items, item];\n            this.setState({\n                items: items\n            });\n        }\n        catch (error) {\n            alert(\"error occurred \"+error.toString())\n            this.setState({loaded:false})\n\n\n        }\n    };\n\n\n    delete_item = (e) => {\n        try {\n            let key = e.currentTarget.parentNode.parentNode.getAttribute(\"data-key\");\n            let items = this.state.items.filter(item => {\n                return parseInt(item.id) !== parseInt(key);\n            })\n            this.setState({ items: items }, () => { let money = this.find_sum(); this.setState({ total_amount: money[0], amount_payable: money[2], total_discount: money[1],cgst:money[3],sgst:money[4] }) })\n        }\n        catch (error) {\n            alert(\"error occurred \"+error.toString())\n            this.setState({loaded:false})\n\n\n        }\n    }\n\n\n \n\n    update_item = (e) => {\n        try {\n            let key = e.currentTarget.parentNode.parentNode.parentNode.getAttribute(\"data-key\");\n            let name = e.currentTarget.getAttribute(\"name\")\n            let value = e.currentTarget.value\n            if(!(name === 'description' || name === 'hs' || name === 'scheme'))\n            {\n                if(value === '')\n                {\n                    return;\n                }\n            }\n\n  \n            const items = this.state.items.length ? (this.state.items.map(item => {\n                if (parseInt(item.id) === parseInt(key)) {\n                    item[name] = value;\n                }\n\n                return (item)\n            })) : ([])\n            let money = this.find_sum()\n\n            this.setState({ total_amount: money[0], amount_payable: money[2], total_discount: money[1], cgst: money[3],sgst: money[4]})\n        }\n        catch (error) {\n            alert(\"error occurred \"+error.toString())\n            this.setState({loaded:false})\n\n\n        }\n\n    }\n\n    new_bill=()=>{\n        this.setState({ name:\"Shri \",address: \"\",pg: \"\",check: false,auto_gst: true,items: [{\"id\": 1,\"description\": \"\",\"hs\":\"\",\"scheme\":'None',\"mrp\": 0,\"quantity\": 0,\"rate\": 0,\"amount\": 0,\"deleteable\": false}],date: new Date(),discount_given: 0,total_amount: 0,total_discount: 0,amount_payable: 0,errors: [],cgst:0,sgst:0})\n    }\n\n    find_sum = (quantity, value) => {\n        var money = new Array(5).fill(0)\n        try {\n            var discount = parseFloat(this.state.discount_given ? (this.state.discount_given) : 0)\n            // var cgst = parseFloat(this.state.cgst ? (this.state.cgst) : 0)\n            // var sgst = parseFloat(this.state.sgst ? (this.state.sgst) : 0)\n\n            this.state.items.forEach((item) => {\n                let price = parseFloat(item.rate)\n                let quantity = parseFloat(item.quantity)\n                money[0] = parseFloat(money[0]) + parseFloat(price) * parseFloat(quantity)\n            });\n            money[1] = discount\n            // money[1] = money[0]-discount\n            if(this.state.auto_gst)\n            {\n                var sgst = (money[0]-discount)*9/100\n                var cgst = (money[0]-discount)*9/100\n            }\n            else\n            {\n                var sgst=this.state.sgst*1.0\n                var cgst=this.state.cgst*1.0\n            }\n            // var cgst = (money[0]-discount)*9/100\n            // var sgst = (money[0]-discount)*9/100\n            cgst=parseFloat(cgst.toFixed(2))\n            sgst=parseFloat(sgst.toFixed(2))\n            console.log(money[0]+\" \"+discount+\" \"+cgst+\" \"+sgst)\n            console.log(money[0]-discount+cgst)\n            money[2] = Math.round(money[0] - discount+cgst+sgst)\n            console.log(money[2])\n            money[0]=Math.round(money[0])\n            money[3]=cgst\n            money[4]=sgst\n            return money;\n        }\n        catch (error) {\n            alert(\"error occurred \"+error.toString())\n            this.setState({loaded:false})\n\n\n        }\n    }\n\n\n\n    render() {\n        // var Error = this.state.errors.length ? this.state.errors.map(error => {\n        //     return (<div data-key={error.id} className='alert alert-danger alert-dismissible override'>\n        //         <a href=\"#\" onClick={this.deleteError} class=\"close\" data-dismiss=\"alert\" aria-label=\"close\">&times;</a>\n        //         <div><strong>error!</strong> {error.error}</div>\n        //         <div><strong>message</strong> {error.message}</div>\n        //         <div><strong>status</strong> {error.status}</div></div>)\n        // }) : (\"\")\n\n        const products = this.state.products.length ? (this.state.products.map(product => {\n            return (<option key={product.id}>{product.name}</option>)\n        })) : (\" \")\n        var i=0;\n        const customers = this.state.cust_names.length ? (this.state.cust_names.map(customer => {\n            i++;\n            return (<option key={i}>{customer.name}</option>)\n        })) : (\" \")\n        i=0\n        const addresses = this.state.cust_addresses.length ? (this.state.cust_addresses.map(customer => {\n            return (<option key={i}>{customer.address}</option>)\n        })) : (\" \")\n        const hss = this.state.hss.length ? (this.state.hss.map(hs => {\n            return (<option key={hs.id}>{hs.name}</option>)\n        })) : (\" \")\n        i=0\n        const pgs = this.state.cust_pgs.length ? (this.state.cust_pgs.map(customer => {\n            return (<option key={i}>{customer.pg}</option>)\n        })) : (\" \")\n\n        const items = this.state.items.length ? (this.state.items.map(item => {\n            return (\n                <div data-key={item.id} className=\"row\">\n                    <div className=\"column\">\n                    <label style={{ color: \"white\" }}><b>Description</b></label>\n                        <div style={{ width: \"100%\" }}><input title={item.description} list=\"products\" onChange={this.update_item} type=\"text\" value={item.description} className=\"form-control item\" name=\"description\" placeholder=\"Product Descrition\" required/></div>\n                    </div>\n\n                    <div className=\"column\">\n                    <label style={{ color: \"white\" }}><b>HSN/SAC</b></label>\n                        <div style={{ width: \"100%\" }}><input title={item.hs} list=\"hss\" onChange={this.update_item} type=\"text\" value={item.hs} className=\"form-control item\" name=\"hs\" placeholder=\"HSN/SAC\"/></div>\n                    </div>\n\n                    <div className=\"column\">\n                    <label style={{ color: \"white\" }}><b>SCHEME</b></label>\n                        <div style={{ width: \"100%\" }}><input title={item.scheme} onChange={this.update_item} type=\"text\" value={item.scheme} className=\"form-control item\" name=\"scheme\" placeholder=\"SCHEME\"/></div>\n                    </div>\n\n                    <div className=\"column\">\n                    <label style={{ color: \"white\" }}><b>MRP</b></label>\n                        <div style={{ width: \"100%\" }}><input title={item.mrp} step=\"any\" onChange={this.update_item} type=\"number\" value={item.mrp} className=\"form-control item\" name=\"mrp\" min=\"0\" placeholder=\"MRP\" required/></div>\n                    </div>\n\n                    <div className=\"column\">\n                    <label style={{ color: \"white\" }}><b>QUANTITY</b></label>\n                        <div style={{ width: \"100%\" }}><input title={item.quantity} onChange={this.update_item} type=\"number\" value={item.quantity} className=\"form-control item\" name=\"quantity\" min=\"0\" placeholder=\"QUANTITY\"/></div>\n                    </div>\n                    <div className=\"column\">\n                    <label style={{ color: \"white\" }}><b>Rate</b></label>\n                        <div style={{ width: \"100%\" }}><input title={item.rate} step=\"any\" autoComplete=\"off\" onChange={this.update_item} type=\"number\" value={item.rate} className=\"form-control item\"  min=\"0\" name=\"rate\" placeholder=\"RATE\" required /></div>\n                    </div>\n                    <div className=\"column\">\n                    <label style={{ color: \"white\" }}><b>Amount</b></label>\n                        <div style={{ width: \"100%\" }}><input title={item.amount} autoComplete=\"off\" onChange={this.update_item} type=\"number\" step='1' value={(item.rate*item.quantity).toFixed(2)} readOnly=\"true\" className=\"form-control item \" min=\"0\" name=\"amount\" placeholder=\"AMOUNT\" required /></div>\n                    </div>\n            \n                    <div className=\"input-group-postpend column\" style={{ width: \"10%\" }}>\n                        {item.deleteable ? (<span onClick={this.delete_item} ><i className=\"fa fa-times-circle add-btn\"></i></span>) : (<span onClick={this.add_item} id=\"add-item\" ><i className=\"fa fa-plus-circle add-btn\"></i></span>)}\n                    </div>\n                </div>)\n\n        })) : (\"\");\n\n        return (\n            <HotKeys keyMap={this.keyMap} handlers={this.handlers}>\n            <div className=\"container\">\n               <Loader show={this.state.loaded} message={<div class=\"spinner-border\" role=\"status\">\n                   <span class=\"sr-only\">Loading...</span></div>}>\n\n                <div className=\"d-flex justify-content-center h-100\">\n                    <Menu></Menu>\n                    <div style={{ maxWidth: \"2000px\" }} className=\"card float-left\">\n\n                        <div className=\"card-header\">\n                            <h3>{window.RECIEPT_MESSAGE}</h3>\n                        </div>\n                        <div className=\"col-sm-12 col-sm-offset-4 card-body\">\n                            <form onSubmit={this.get_pdf} id=\"login_form\" autoComplete=\"off\">\n                                <label style={{ color: \"white\" }} className=\"float-left\" for=\"name\"><b>Enter Name</b></label>\n\n                                <div className=\"input-group form-group\">\n                                    <input onChange={this.handleChange} type=\"text\" list=\"customers\" value={this.state.name} className=\"form-control input-sm\" id=\"name\" name=\"name\" placeholder=\"Enter Full Name\" required />\n                                </div>\n                                \n                                <label style={{ color: \"white\" }} className=\"float-left\" for=\"address\"><b>Enter Address:</b></label>\n\n                                <div className=\"input-group form-group\">\n\n                                    <input onChange={this.handleChange} type=\"textarea\" list=\"addresses\" value={this.state.address} className=\"form-control\" id=\"address\" placeholder=\"Enter Address\" name=\"address\"/>\n                                </div>\n\n                                <label style={{ color: \"white\" }} className=\"float-left\" for=\"pg\"><b>PAN/GST No:</b></label>\n\n                                <div className=\"input-group form-group\">\n                                    <input onChange={this.handleChange} list=\"pgs\" value={this.state.pg} id=\"pg\" placeholder=\"Enter PAN/GST\" name=\"pg\" className=\"form-control\"/>\n                                </div>\n\n                                <label style={{ color: \"white\" }} className=\"float-left\" for=\"date\"><b>Enter Date</b></label>\n                                <div className=\"input-group form-group\">\n                                    <DatePicker selected={this.state.date} className=\"form-control\" dateFormat=\"dd-MMMM-yyyy\" onChange={date => this.setState({'date':date})} />\n                                </div>\n                                <div className=\"input-group form-group float-left\">\n                                    <input onChange={this.auto_gst_change} id=\"auto_gst\" type=\"checkbox\" defaultChecked={this.state.auto_gst}/><label style={{color:\"white\"}}>Automatic calculate GST</label>\n                                </div>\n                                <div id=\"items-cart\">\n                                    {items}\n                                <div>\n                                </div>\n                                </div>\n\n                                <div className=\"input-group form-group float-left price-tag\">\n                                    <div className=\"input-group-prepend\">\n                                        <span className=\"input-group-text\"><i>CG 9%</i></span>\n                                    </div>\n                                    <input type=\"number\" step=\"any\" onChange={this.handleChange} name=\"cgst\" value={this.state.cgst} className=\"form-control\" min=\"0\"/>\n                                </div>\n\n                                <div className=\"input-group form-group float-left price-tag\">\n                                    <div className=\"input-group-prepend\">\n                                        <span className=\"input-group-text\"><i>SG 9%</i></span>\n                                    </div>\n                                    <input step=\"any\" type=\"number\" onChange={this.handleChange} name=\"sgst\" value={this.state.sgst} className=\"form-control\" min=\"0\"/>\n                                </div>\n\n                                <div className=\"input-group form-group float-right price-tag\">\n                                    <div className=\"input-group-prepend\">\n                                        <span className=\"input-group-text\"><i className=\"fa fa-rupee\"></i>(Total)</span>\n                                    </div>\n                                    <input step=\"any\" type=\"number\" className=\"form-control\" value={this.state.amount_payable} min=\"0\" readOnly id=\"amount\" />\n                                </div>\n\n                                <div className=\"input-group form-group float-right price-tag\">\n                                    <div className=\"input-group-prepend\">\n                                        <span className=\"input-group-text\"><i className=\"fa fa-rupee\"></i>(Disc)</span>\n                                    </div>\n                                    <input type=\"number\" onChange={this.handleChange} name=\"discount_given\" value={this.state.discount_given} className=\"form-control\" min=\"0\" max={this.state.total_amount} />\n                                </div>\n                                <div className=\"input-group form-group float-left\">\n                                    <input onChange={this.invoice_skip} id=\"check\" type=\"checkbox\" checked={this.state.check}/><label style={{color:\"white\"}}>Invoice</label>\n                                </div>\n                      \n                                <div className=\"form-group\">\n                                    <input type=\"submit\" value=\"Submit\" className=\"btn-lg login_btn\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <button type=\"button\" onClick={this.new_bill} className=\"btn-sm active\">New Bill</button>\n                                </div>\n\n                            </form>\n                            <datalist id=\"products\">\n                                {products}\n                            </datalist>\n                            <datalist id=\"hss\">\n                                {hss}\n                            </datalist>\n                            <datalist id=\"customers\">\n                                {customers}\n                            </datalist>\n                            <datalist id=\"addresses\">\n                                {addresses}\n                            </datalist>\n                            <datalist id=\"pgs\">\n                                {pgs}\n                            </datalist>\n                        </div>\n                    </div>\n                </div>\n\n\n\n                </Loader>\n\n\n\n            </div>\n            </HotKeys>\n            \n        )\n    }\n}\nexport default Home;\n","import React, { Component } from 'react'\nimport { MDBDataTableV5 } from 'mdbreact';\nimport Menu from './menu.component'\nimport axios from 'axios';\n\nclass Customer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      datatable: {\n        columns: [\n          {\n            label: 'Name',\n            field: 'name',\n            width: 150,\n          },\n          {\n            label: 'Address',\n            field: 'address',\n            width: 270,\n          },\n          {\n            label: 'PAN/GST No',\n            field: 'pg',\n            width: 200,\n          },\n          {\n            label: 'DateAndTime',\n            field: 'DateAndTime',\n            width: 150,\n          }\n        ],\n        rows: [],\n      }\n    }\n\n  }\n\n  handleClick(params)\n  {\n      window.open(window.API_URL+params,'_blank');\n\n  }\n\n  update_rows = (response) => {\n    try {\n      let columns = this.state.datatable.columns\n      let rows = this.state.datatable.rows\n      response.forEach(element => { \n        console.log(element)\n        element.clickEvent=() => this.handleClick(element.receipt_pdf)\n        element.hover=()=>()=>{console.log(\"hillo\")}\n        rows.push(element) })\n      \n      let datatable = { columns: columns, rows: rows }\n      this.setState({ datatable: datatable })\n    }\n    catch (error) {\n      alert(\"error occurred \"+error.toString())\n\n    }\n  }\n\n  \n\n  componentDidMount = () => {\n    axios.get(window.API_URL+'/receipts/customers/')\n      .then(response => {\n        if (response.status == 200) {\n\n            this.update_rows(response.data.Data);\n          }\n          else {\n            alert(response.error.error.toString()+\" Unknown Error Occurred\")\n          }\n        }\n      )\n      .catch(error => {\n        alert(\"error occurred \"+error.toString())\n      });\n  }\n\n\n  render() {\n\n    return (\n      <div>\n        <Menu />\n        <div style={{ backgroundColor: \"black\", fontSize: \"25px\", color: \"green\" }}>\n          <MDBDataTableV5 className=\"table-responsive\" style={{ cursor: \"pointer\", textAlign: \"left\", backgroundColor: \"black\", fontSize: \"20px\", color: \"white\" }} hover entriesOptions={[10, 20, 25]} entries={10} pagesAmount={4} data={this.state.datatable} searchTop searchBottom={false} />\n        </div>\n      </div>\n\n    )\n\n  }\n}\nexport default Customer;","import React from 'react';\nimport './App.css';\nimport Home from './components/home.component.js';\nimport Menu from './components/menu.component.js'\nimport Customer from './components/customer.component'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {BrowserRouter,Route,Switch, Router} from 'react-router-dom';\n\nimport { HotKeys } from \"react-hotkeys\";\n\n\nfunction App() {\n  return (\n   \n    <BrowserRouter>\n    <div className=\"App\">\n     <Route exact path='/menu' component={Menu}></Route>\n     <Route exact path='/customer' component={Customer}></Route>\n     <Route exact path='/home' component={Home}></Route>\n     <Route exact path='/' component={Home}></Route>\n\n    </div>\n    </BrowserRouter>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}